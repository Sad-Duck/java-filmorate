DELETE FROM LIKES;

DELETE FROM FRIENDS;

DELETE FROM FILM_GENRES;

DELETE FROM USERS;

DELETE FROM FILMS;

DELETE FROM MPA;

DELETE FROM GENRES;

ALTER TABLE USERS ALTER COLUMN user_id RESTART WITH 1;

ALTER TABLE FILMS ALTER COLUMN film_id RESTART WITH 1;

ALTER TABLE GENRES ALTER COLUMN genre_id RESTART WITH 1;

create table IF NOT EXISTS GENRES
(
    GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE    VARCHAR
);

create table IF NOT EXISTS MPA
(
    MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RATING VARCHAR(255) not null unique
);

create table IF NOT EXISTS FILMS
(
    NAME         VARCHAR not null,
    DESCRIPTION  VARCHAR,
    RELEASE_DATE DATE              not null,
    DURATION     INTEGER           not null,
    MPA_ID       INTEGER,
    FILM_ID      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RATE         INTEGER,
    constraint "Films_rating_fk"
        foreign key (MPA_ID) references MPA
);

create table IF NOT EXISTS FILM_GENRES
(
    FILM_ID  INTEGER not null,
    GENRE_ID INTEGER,
    constraint "Films_genres_fk"
        foreign key (FILM_ID) references FILMS,
    constraint "Films_genres_genre_fk"
        foreign key (GENRE_ID) references GENRES
);

create table IF NOT EXISTS USERS
(
    USER_ID  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR,
    LOGIN    VARCHAR not null,
    NAME     VARCHAR not null,
    BIRTHDAY DATE
);

create table IF NOT EXISTS FRIENDS
(
    USER_ID   INTEGER not null,
    FRIEND_ID INTEGER,
    constraint FRIENDS_USER_FK
        foreign key (USER_ID) references USERS (USER_ID),
    constraint "Friends_fk"
        foreign key (FRIEND_ID) references USERS (USER_ID)
            on update cascade on delete cascade
);


create table IF NOT EXISTS LIKES
(
    FILM_ID INTEGER not null,
    USER_ID INTEGER,

    constraint "Likes_film_fk"
        foreign key (FILM_ID) references FILMS,
    constraint "Likes_user_fk"
        foreign key (USER_ID) references USERS (USER_ID)
);

INSERT INTO PUBLIC.MPA (mpa_id, rating)
VALUES (1, 'G'),
       (2, 'PG'),
       (3, 'PG-13'),
       (4, 'R'),
       (5, 'NC-17');